package card

import "context"

// 總共有哪些牌
var cards = []int{
	0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E,
	0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E,
	0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E,
	0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
}

// CardNumber: 預計產出的牌數量
func RunGenCardWorker(ctx context.Context, CardNumber int) chan []int {
	genCardChan := make(chan []int, 1024)
	go func() {
		Combination(make([]int, 0, 5), cards, CardNumber, genCardChan)
		close(genCardChan)
	}()
	return genCardChan
}

func Combination(hand []int, deck []int, targerNumber int, out chan []int) {
	if len(hand) == targerNumber {
		out <- hand // output
		return
	}

	for i, card := range deck {
		newHand := append(hand[:len(hand):len(hand)], card)
		Combination(newHand, deck[i+1:], targerNumber, out)
	}
}
